devtools::document()
devtools::document()
devtools::use_vignette("using_rfars.Rmd")
devtools::use_data()
devtools::use_readme_rmd()
devtools::use_data_raw()
devtools::use_testthat()
?testthat::test_that
?testthat::expect_is
library(testthat)
library(rfars)
WD<-getwd()
setwd(system.file("data-raw",package="rfars"))
test_that("object classes are correct",{
expect_is(fars_read("accident_2014.csv.bz2"),c("tbl_df","tbl","data.frame"))
expect_is(fars_summarize_years(2014),c("tbl_df","tbl","data.frame"))
expect_is(fars_read_years(2014),"list")
expect_is(make_filename(2014),"character")
expect_is(fars_map_state(1,2013),"NULL")
})
setwd(WD)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)
}
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(file)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
fars_read_years(2013)
fars_read_years(2013)
fars_read_years(2013)
test<-fars_read_years(2013)
class(test)
fars_read("accident_2013.csv.bz2")
test<-fars_read("accident_2013.csv.bz2")
class(test)
rm(list=ls())
devtools::test()
devtools::document()
devtools::test()
?`%>%`
devtools::document()
devtools::test()
devtools::use_travis()
devtools::use_appveyor()
